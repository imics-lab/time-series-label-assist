Tyler Lynn

Ideally the first step of the data intake pipeline would be to have the user
upload the raw files from their device, but since we do not have a sufficiently
large collection of interfaces for merging and managing those files we will instead
put the onus on the user to make sure their data is all in one data frame and synchronized.

High Level Outline:
1. User uploads the the data frame.
2. User uploads label List
3. User labels the data (tristans interface) with video synchronization support
4. Models can be trained from this labeled data, feature extraction or model training
5. User uploads seperate data and uses the aforementioned model or feature extractor to label the data
6. The user can then inspect the data on a umap (tyler's interface) and correct any seemingly mislabeled points
7. Extra tools at the end (heatmap, accuracy metrics)..

Improvements (opinion):

-I think creating a fully functional interface for managine time series data that comes from different devices 
would be usefl. Lee Hinkle outlined this in a presentation where he compares the process of merging and 
synchronizing differently formatted time-series data to how LLVM compiles code from different languages into
intermediate representations.
	Implementation:
	- Seperate interfaces for each device that produces a standardized file form
	- An interface for merging the standardized file forms and all other necessary intermediate operations

-The application would work more intuitively for users if it were a multipage web or desktop app. The more arcane or complex
the interface is the more technical acumen you are expecting from the user which limits your audience and also limits the use cases
of the app since somebody with suffienct technical experience will at some point just be able to create models and interpret them for 
themself. This also applies to the initial step of expecting the user to properly format all of their time series data. 
